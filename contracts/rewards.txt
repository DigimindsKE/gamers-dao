// SPDX-License-Identifier: SEE LICENSE IN LICENSE
pragma solidity 0.8.17;
import "./erc1155currencyminter.sol";
import "./enemies.sol";

contract rewards {
    
    struct rewardPool {
        uint tokenID;
        uint baseRewards;
        uint poolTotal;
    }
    address private currencyMinterAddress;
    address private enemyAddress;
    uint poolID;
    mapping(uint => rewardPool) poolDetails;
    

    
    constructor(address _currencyAddress, address _enemyAddress) {
        currencyMinterAddress = _currencyAddress;
        enemyAddress = _enemyAddress;
    }

    function mintRewards(uint _amount) external {
       //chainlink randomnumber to select the tokenID
       uint tokenID;
        erc1155CurrencyMinter minter = erc1155CurrencyMinter(
            currencyMinterAddress
        );

        minter.mintRewards(tokenID, _amount);
        rewardPool storage details = poolDetails[poolID];
        details.poolTotal = _amount;
    }

    function setBaseRewards(uint _amount) external {
        uint id = poolID;
        rewardPool storage details = poolDetails[id];
        details.baseRewards =_amount;      
    }

    function getRewards(uint _gameID, uint _enemyID) external returns (uint) {
        enemies enemy = enemies(enemyAddress);
        //set enemy percentage increase per level
        uint level = enemy.newEnemy[_enemyID].level;

    }
}
